Game: holds objects relevant to the the game and methods for advancing turns
  - ArrayList<Card> _deck
  - int _currentTurn
  - Player[] _players
  - MurderSituation _theTruth
  + boolean cardExists(Card s)
  + void initGame() -- ask the user for information, such as the
        number of players and their names
  + void runTurn()
  + void main(String[] args) -- run initGame and then a loop,
        calling runTurn appropriately

Card
  - String _name
  - int _cardType //0: Person, 1: Place, 2: Weapon
  + Card()
  + String getName()
  + String getCardType()
  + String toString()
  + boolean equals(Object o)
  + String normalizeName(String nm)

MurderSituation:
  ~ Card _who
  ~ Card _where
  ~ Card _weapon
  ~ MurderSituation()
  ~ String toString()
  ~ boolean equals(Object o)
  ~ Card getWho()
  ~ Card getWhere()
  ~ Card getWeapon()

Player: an abstract class from which HumanPlayer and AutomatedPlayer extend
  - Notesheet _notes
  - Card[] _cards
  - String _name
  + Player(int numCards,String name)
  + boolean accuseThisTurn()
  + MurderSituation suspect(Game game)
  + MurderSituation accuse(Game game)

LivingPlayer will implement the above methods to ask the user to make
the relevant decisions

AutomatedPlayer will implement Player's methods to make decisions and
print what is happening to the console

Notesheet: an abstraction for getting information from and manipulate
information in the notesheet of the player, whether those notes are
stored in variables or in a file
